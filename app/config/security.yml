security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_SONATA_IDENTITY_READER:
            - ROLE_SONATA_ADMIN_IDENTITY_LIST
            - ROLE_SONATA_ADMIN_IDENTITY_VIEW
        ROLE_SONATA_IDENTITY_EDITOR:
            - ROLE_SONATA_ADMIN_IDENTITY_CREATE
            - ROLE_SONATA_ADMIN_IDENTITY_EDIT
        ROLE_AUDIT:       [ROLE_USER, ROLE_AUDIT]
        ROLE_ADMIN:       [ROLE_SONATA_ADMIN, ROLE_SONATA_ADMIN_VALIDATE]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        admin:
            pattern: ^/admin(.*)
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                always_use_default_target_path: false
                default_target_path: /admin
            logout:
                path: /admin/logout
                target:  /admin/login
                invalidate_session: false
            anonymous:    true

        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false

        api:
            pattern:    ^/api
            fos_oauth:  true
            stateless:  true

    access_control:
        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_USER, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }