imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @DemocracyOSNetIdAdminBundle/Resources/config/admin.yml }

framework:
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ 'DemocracyOSNetIdAdminBundle' ]
    filters:
        cssrewrite: ~

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

doctrine_mongodb:
    connections:
        default:
            server: %mongo_dbhost%
    default_database: %mongo_dbname%
    document_managers:
        default:
            auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.block.identity.validation: ~
        sonata.admin.block.search_result:
            contexts:   [admin]

sonata_admin:
    title:      Net Id Admin
    title_logo: @DemocracyOSNetIdAdminBundle/Resources/public/images/democracyos-logo.png
    templates:
        ## default global templates
        layout:  DemocracyOSNetIdAdminBundle:SonataAdminBundle:standard_layout.html.twig
        ajax:    SonataAdminBundle::ajax_layout.html.twig

        ## default actions templates, should extend a global templates
        list:    SonataAdminBundle:CRUD:list.html.twig
        show:    SonataAdminBundle:CRUD:show.html.twig
        edit:    SonataAdminBundle:CRUD:edit.html.twig
    dashboard:
        blocks:
            - { position: left, type: sonata.admin.block.admin_list }
            - { position: left, type: sonata.block.identity.validation }
    security:
        handler: sonata.admin.security.handler.role

sonata_user:
    admin:
        user:
            class: Application\Sonata\UserBundle\Admin\Model\UserAdmin
        group:
            class: Application\Sonata\UserBundle\Admin\Model\GroupAdmin

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Application\Sonata\UserBundle\Entity\User

fos_oauth_server:
    db_driver: orm
    client_class:        DemocracyOS\NetIdApiBundle\Entity\Application
    access_token_class:  DemocracyOS\NetIdApiBundle\Entity\AccessToken
    refresh_token_class: DemocracyOS\NetIdApiBundle\Entity\RefreshToken
    auth_code_class:     DemocracyOS\NetIdApiBundle\Entity\AuthCode

services:
    json_formatter:
        class: Monolog\Formatter\JsonFormatter
    audit_logger:
        class: DemocracyOS\NetIdAdminBundle\Logger\AuditLogger
        arguments: ["@security.context", "@service_container"]
    login_listener:
        class: DemocracyOS\NetIdAdminBundle\Listener\LoginListener
        arguments: ["@audit_logger"]
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }
    request_headers_parser:
        class: DemocracyOS\NetIdApiBundle\Entity\RequestHeadersParser

monolog:
    channels: ["audit"]
    handlers:
        audit:
            type: console
            channels: [audit]
            formatter: json_formatter